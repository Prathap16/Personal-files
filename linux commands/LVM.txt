LVM:
Logical volue management:
______________________________________
It is mechanism of virtulizing the disk. Creates virtual disk portions fro one or more hard drives,allowing to grow,shirnk or move from  one drive to another.


Components of LVM in Linux:
? Physical Volumes (PV)
? Physical Extent (PE)
? Volume Group (VG)
? Logical Volume (LV)
? Logical Extent (LE)

Physical Volume (PV)
It is the standard partition that you add to the LVM. Normally, a physical volume is a standard primary or logical partition with the hex code 8e.

Physical Extent (PE)
It is a chunk of disk space. Every PV is divided into a number of equal sized PEs.

Volume Group (VG)
It is composed of a group of PV’s and LV’s. It is the organizational group for LVM.

Logical Volume (LV) is composed of a group of LEs. You can format and mount any file system on an LV. The size of these LV’s can easily be increased or decreased as per the requirement.

Logical Extent (LE)
It is also a chunk of disk space. Every LE is mapped to a specific PE.

LVM Command Function

pvs
Displays all the physical volumes

vgs
Displays all volume groups in the system

lvs
Displays all the logical volumes in the system

pvdisplay
Displays detailed information on physical volumes

vgdisplay
Displays detailed information on volume groups

lvdisplay
Displays detailed information on logical volumes

pvcreate
Create a new physical volume
#pvcreate partition name
#pvcreate /dev/sdb2

vgcreate
Create a new volume group.
#vgcreate vgname devicename
#vgcreate vg_test /dev/sdb3

lvcreate
Creates a new logical volume
#lvcreate –L <size of LV> -n <name for LV> <VG name>
#lvcreate –L 200M –n ktlv ktvg (To create a LV of 200MB)

Adding File system to the LV and Mounting it::::
#mkfs.ext4 /dev/ktvg/ktlv

Mounting:
Mounting an LV is exactly same like a normal partition, again the path for mounting will be /dev/vg/lv
Create a directory over which the LV should be mounted.
#mount </dev/vgname/lvname> /directory name
#mount /dev/ktvg/ktlv /ktdir
Verify the mounting with mount command
Make it a permanent mount by making an entry in /etc/fstab

vgextend
Add a new physical disk to a volume group.
#vgextend <VG name> <partition name>
#vgextend ktvg /dev/sda3

lvextend
Extends a logical volume
#lvextend –L +200M /dev/ktvg/ktlv
Sometimes the file system size may be full, so we need to increase the size of the LV to continue adding the data in it.
? The size of LV can be increased online, no downtime is required.
? Check the current size of the LV by using #df –h command.

lvresize
Resizes a logical volume
Reducing the size of an LV
? Reducing the size of an LV is a bit complicated task, there are few things which you need to keep in mind before reducing the size of an LV.
? LV size cannot be reduced online, it requires a down time i.e. unmounting the file system.
? Organized the data before reducing the size of LV.
? Update the file system about the size. I.e. what its size will be after reduction.
? Finally reduce the size.

Check the size of the lv using df –h command
? Unmount the LV using umount command
? Organize the data in LV by using e2fsck command
? #e2fsck -f /dev/ktvg/ktlv.
? Update the file system by using resize2fs command
? #resize2fs /dev/ktvg/ktlv 300M (where 300M is the approximate total size of LV after reduction)
 **Now reduce the size by using # lvreduce -L -200M /dev/ktvg/ktlv command
? We know the size of LV is around 500MB, from previous picture in case of extending the size of LV.

pvmove
Moves/migrates data from one physical volume to another
There might be a situation where the PV might be failing and it is required to be replaced, in such case, we need to migrate or move the data from such PV to the other and isolate the PV.
? The Steps to migrate the PV are
? Access the mount point of failing PV and check the data in it,
? Verify the size of the PV by pvs command or pvdisplay command.
? Unmount the file system on that PV.
? Add new PV, which should be of the same size or higher than that of the replacing PV to the volume group.
? Migrate the PVs contents to the new PV using following command
? #pvmove <Old PV> <New PV>
? Mount back the LV, access the mount point and verify the data in it.
? Remove the faulty PV from Volume Group.

vgreduce
Reduces a volume group by removing a PV from it.

pvremove
Deletes a physical volume

vgremove
Removes /Deletes a volume group

lvremove
Removes /Deletes a logical volume

Creating a VG by specifying the PE size
To create a vg with custom PE size use
#vgcreate <name for the vg > -s <size of PE( 1-128)> <pv names>



#vgcreate ktvg2 –s 16 /dev/sda5

LV Create using LE
#lvcreate –l <no. of LE> -n <name for the LV> <volume group name>
#lvcreate –l 25 –n ktlv2 ktvg2.


Cases:
PV create
vgcreate
vgextend
lvcreate
lvextend
lvreduce
vgreduce
pv move
pv reove
vgremove
